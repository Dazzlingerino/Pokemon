[{"C:\\Users\\User\\Desktop\\Pokemon\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Pokemon\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Pokemon\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Pokemons\\Pokemon\\Pokemon.jsx":"5","C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Pokemons\\Pokedex.jsx":"6"},{"size":311,"mtime":1612265839407,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1612194772341,"results":"9","hashOfConfig":"8"},{"size":441,"mtime":1612265839400,"results":"10","hashOfConfig":"8"},{"size":194,"mtime":1612265839401,"results":"11","hashOfConfig":"8"},{"size":2043,"mtime":1612265839403,"results":"12","hashOfConfig":"8"},{"size":2584,"mtime":1612265839402,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vp9dim",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\Users\\User\\Desktop\\Pokemon\\src\\index.js",[],"C:\\Users\\User\\Desktop\\Pokemon\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Pokemon\\src\\App.js",[],["29","30"],"C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Pokemons\\Pokemon\\Pokemon.jsx",["31"],"import React from 'react';\r\nimport classes from './Pokemon.module.css'\r\nimport style from \"../Pokemons.module.css\";\r\n\r\nconst Pokemon = ({currentPokemon,visible}) => {\r\n\r\n    console.log('in pokemon', currentPokemon)\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <picture className={classes.picturePOK}>\r\n                <img className={classes.imgItem} src={`https://pokeres.bastionbot.org/images/pokemon/${currentPokemon.id}.png/`}/>\r\n            </picture>\r\n            <div style={{marginLeft:'60px',marginBottom:'10px'}}>\r\n                <th style={{textTransform: 'capitalize',fontWeight:'700',fontSize:'2em'}}>{currentPokemon !== -1 ? `${currentPokemon.name} ${currentPokemon.id.toString().padStart(4, '#0')}` : null}</th>\r\n            </div>\r\n            <table >\r\n\r\n                <tr>\r\n                    <td>Type</td>\r\n                    <td style={{textTransform:'capitalize'}}> {currentPokemon.types && currentPokemon.types.map(currType => `${currType.type.name + ' ' }`)}</td>\r\n                </tr>\r\n                {currentPokemon.stats && currentPokemon.stats.map(\r\n                    currStat => (<tr>\r\n                        <td style={{textTransform:'capitalize'}}>{getStatName(currStat.stat.name)}</td>\r\n                    <td>{currStat.base_stat}</td>\r\n                    </tr>))\r\n\r\n                }\r\n                <tr>\r\n                    <td>Weight</td>\r\n                    <td>{currentPokemon.weight}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Total moves</td>\r\n                    <td>{currentPokemon.moves.length}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default Pokemon\r\nfunction getStatName(stat) {\r\n    switch (stat){\r\n        case 'special-attack':\r\n            return 'SP Attack'\r\n        case 'special-defense':\r\n            return 'SP Defense'\r\n        case 'hp':\r\n            return 'HP'\r\n        default :\r\n            return stat;\r\n\r\n    }\r\n}\r\n","C:\\Users\\User\\Desktop\\Pokemon\\src\\components\\Pokemons\\Pokedex.jsx",["32"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport s from './Pokemons.module.css'\r\nimport Pokemon from \"./Pokemon/Pokemon\";\r\n\r\n\r\nexport default function Pokedex() {\r\n    const [data, setData] = useState([]);\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [currentPokemon, setCurrentPokemon] = useState(0);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const pokemonsSet = await axios(\r\n                `https://pokeapi.co/api/v2/pokemon?limit=12`,\r\n            );\r\n            const pokemonInfo = await Promise.all(pokemonsSet.data.results.map(item => axios(`${item.url}`)))\r\n            setData(pokemonsSet.data);\r\n            setPokemons(pokemonInfo.map(item => item.data))\r\n\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    async function handleLoadMore() {\r\n        const pokemonsSet = await axios(data.next);\r\n        const pokemonInfo = await Promise.all(pokemonsSet.data.results.map(item => axios(`${item.url}`)))\r\n        setData(pokemonsSet.data)\r\n        setPokemons([...pokemons, ...pokemonInfo.map(item => item.data)])\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.pokemons}>\r\n            <div className={s.gridForPok}>\r\n                {pokemons.sort((a, b) => (a.id > b.id) ? 1 : -1).map(item => (\r\n                    <div className={s.pokemon} onClick={() => {\r\n                        setCurrentPokemon(item)\r\n                        setIsVisible(true)\r\n                    }} key={item.objectID}>\r\n                        <picture className={s.picture}>\r\n                            <img className={s.pocIMG}\r\n                                 src={`https://pokeres.bastionbot.org/images/pokemon/${item.id}.png/`}\r\n                                 alt={'Error with showing pokemon image'}/>\r\n                        </picture>\r\n                        <div className={s.pokeName}> {item.name}</div>\r\n                        {<div className={s.typesBox}> {item.types && item.types.map(currType => (\r\n                            <span className={[s.type, s[currType.type.name]].join(' ')}>\r\n                                {`${currType.type.name + ' '}`}\r\n                            </span>\r\n                        ))}</div>}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <button className={s.pokemonsButton} onClick={handleLoadMore}>Load More</button>\r\n            {isVisible ?\r\n                <Pokemon currentPokemon={currentPokemon}/> : null}\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":9,"column":17,"nodeType":"39","endLine":11,"endColumn":64},{"ruleId":"37","severity":1,"message":"38","line":45,"column":29,"nodeType":"39","endLine":47,"endColumn":76},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]